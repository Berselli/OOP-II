/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package OOPII.List6.Number2;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author berse
 */
public class FrameMDI extends javax.swing.JFrame {

    /**
     * Creates new form FrameMDI
     */
    public FrameMDI() {
        initComponents();
    }
    
    String filePath;
    String textInFile;
    String defaultPath = System.getProperty("user.dir");
    FileFilter filter = new FileNameExtensionFilter("Text files", "txt");

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPane2 = new javax.swing.JEditorPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jEditorPane2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jScrollPane2.setViewportView(jEditorPane2);

        jMenu1.setText("File");

        jMenuItem1.setText("New");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Open");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Save");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem4.setText("Undo");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem5.setText("Redo");
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 89, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 859, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 703, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        //FileRW.writeFile(jEditorPane2.getText());
        
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // OPEN FILE
        if(filePath != null){
            // Different text
            if(!FileRW.readFile(filePath).equals(jEditorPane2.getText()))
            {
                int returnVal = JOptionPane.showConfirmDialog(jMenu1, "Do you want to save the file?", "Save option",JOptionPane.YES_NO_OPTION);
                if(returnVal == JOptionPane.YES_OPTION){
                    FileRW.writeFile(filePath, jEditorPane2.getText());
                }                
            }
        } else if(jEditorPane2.getText().length() > 0){
            int returnVal = JOptionPane.showConfirmDialog(jMenu1, "Do you want to save the file?", "Save option",JOptionPane.YES_NO_OPTION);
            if(returnVal == JOptionPane.YES_OPTION){
                if(filePath != null){
                    FileRW.writeFile(filePath, jEditorPane2.getText());
                } else {
                    JFileChooser fch = new JFileChooser(defaultPath);
                    fch.setFileFilter(filter);
                    returnVal = fch.showOpenDialog(null);
                    if (returnVal == JFileChooser.APPROVE_OPTION){
                        filePath = fch.getSelectedFile().getAbsolutePath();
                        FileRW.writeFile(filePath, jEditorPane2.getText());
                    }                    
                }                    
            }
        }
        
        JFileChooser fch = new JFileChooser(defaultPath);
        fch.setFileFilter(filter);
        int returnVal = fch.showOpenDialog(null);
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            filePath = fch.getSelectedFile().getAbsolutePath();
            String fileText = FileRW.readFile(filePath);
            jEditorPane2.setText(fileText);
            
        }       
        
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // NEW FILE
        
        if(filePath != null){
            if(!FileRW.readFile(filePath).equals(jEditorPane2.getText()))
            {
                int returnVal = JOptionPane.showConfirmDialog(jMenu1, "Do you want to save the file?", "Save option",JOptionPane.YES_NO_OPTION);
                if(returnVal == JOptionPane.YES_OPTION){
                    FileRW.writeFile(filePath, jEditorPane2.getText());
                }                
            }
        } else {
            if(jEditorPane2.getText().length() > 0 ){
                int returnVal = JOptionPane.showConfirmDialog(jMenu1, "Do you want to save the file?", "Save option",JOptionPane.YES_NO_OPTION);
                if(returnVal == JOptionPane.YES_OPTION){
                    if(filePath != null){
                        FileRW.writeFile(filePath, jEditorPane2.getText());
                    } else {
                        JFileChooser fch = new JFileChooser(defaultPath);
                        fch.setFileFilter(filter);
                        returnVal = fch.showOpenDialog(null);
                        if (returnVal == JFileChooser.APPROVE_OPTION){
                            filePath = fch.getSelectedFile().getAbsolutePath();
                            FileRW.writeFile(filePath, jEditorPane2.getText());
                        }                    
                    }                    
                }
            }            
        }
        
        jEditorPane2.setText("");
        
        /*
        JFileChooser fch = new JFileChooser();
        int returnVal = fch.showOpenDialog(null);
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            filePath = fch.getSelectedFile().getAbsolutePath();
            
        }
        */
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // UNDO THE TEXT
        
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameMDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameMDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameMDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameMDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameMDI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane jEditorPane2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
